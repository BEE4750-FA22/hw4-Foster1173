---
title: "BEE 4750/5750 Homework 4"
author: "Susie Foster (saf253)"
date: `j import Dates; Dates.Date(Dates.now())`
weave_options:
    term: false
    results: tex
    cache: off
---

<!-- This setups the environment and installs packages, but doesn't appear in the generated document -->
<!-- You shouldn't need to modify this -->
```julia; echo = false; results = "hidden"
using Pkg
Pkg.activate(".")
Pkg.instantiate()
```

# Problem 1
```julia
# variables
KNames= [ "Landfill" "Recycling Facility" " WTE Facility"];
SNames= ["city 1" "city 2"];
K= [200 350 150]; # capacity of disposal site in Mg/d
S= [100 170]'; # Mg/day of solid waste produced
# W is going to be a 2x3 (or a 5x3???) matrix of the waste transported from each city to each thing
c= [2000 1500 2500]; # $/day, fixed cost of operating disposal
b= [50 7 60]; # $/Mg, tipping fee
RecyC= [0 45 0]; # $/Mg recycled, only applies to recycling facility
a= 1.5; # $/Mg-km, transportation fee
l= [5 30 15; 15 25 10]; # transportation distances between cities and facilities
lR= [32 18 15]; # transportation distances between different facilities
# matrix of distances, rows are City 1, City 2, MRF, LF, WTE
# columns are MRF, LF, and WTE
FracTotMass= [.15 .40 .05 .03 .02 .05 .18 .04 .02 .02 .01 .03];
CombustAsh=  [.08 .07 .05 .10 .15 .02 .02 1.0 1.0 1.0 1.0 .70];
RecycRate=   [0.0 .55 .15 .10 0.0 .30 .40 .60 .75 .80 .50 0.0];
```

## Problem 1.1
```julia
RecycFrac= sum(FracTotMass.*RecycRate);
AshFrac= sum(FracTotMass.*CombustAsh);
```
The overall recycling and ash fractions for the cities are as follows:

RecycFrac= `j round(RecycFrac*100; digits=2)`%

AshFrac= `j round(AshFrac*100; digits=2)`%

## Problem 1.2
The decision variables for this model are as follows:

A true/false variable that identifies if a particular facility will be in use (1= true, 0= false):
$Y[j=1:3]$

A variable describing the amount of MSW transported from city to facility, in Mg/day:
$W[i=1:2, j=1:3]$. The rows are the city ($i$) the waste is coming from and the 
columns are the facility ($j$) the waste is going to.

A variable describing the amount of MSW transported between facilities,
$R[j= 1:3, j=1:3]$. Since in this problem, only $R_{2,1}$, $R_{2,3}$, $R_{3,1}$ 
will be used, therefore for simplicity of the model, this variable will really 
be modeled as $R[k=1:3]$, where $R_1=R_{2,1}$, $R_2=R_{2,3}$, and $R_3=R_{3,1}$.


## Problem 1.3
The total cost will be given by:
$Cost_{total}= Cost_{fixed} + Cost_{tipping} + Cost_{recycling} + Cost_{transportation}$

where $Cost_{fixed}=sum([2000, 1500, 2500].*Y)$

and $Cost_{tipping}=sum([50, 7, 60].*W)+sum([50, 60, 50].*R)$

and $Cost_{recycling}=percent_{recycled}*sum([0, 45, 0].*W)$

and finally, $Cost_{transportation}= 1.5*sum([5, 30, 15; 15, 25, 10].*W) + 1.5 * sum([32, 18, 15].* R)$

## Problem 1.4
the first constraints are nonnegativity constraints: 
$all variables >=0$

the second set of constraints are capacity constraints: 

$W_{1,1}+W_{2,1}+R_{2,1}+R_{3,1}<=Capacity_{LF}= 200$ Mg/day

$W_{1,2}+W_{2,2}<=Capacity_{MRF}= 350$ Mg/day

$W_{1,3}+W_{2,3}+R_{2,3}<=Capacity_{WTE}= 150$ Mg/day

the third set of constraints are the ash and recycling residuals constraints:

$R_{3,1}=percent_{ash}*(W_{1,3}+W_{2,3}+R_{2,3})$ Mg/day

$R_{2,3}+R_{2,1}=(1-percent_recycled)*(W_{1,2}+W_{2,2})

since I have simplified the variable R, there is no need to impose 
zero constraints on the unused R values ($R_{1,2}$, $R_{1,2}$, etc.)

the last set of constraints are the constraints on the Y variable: 
FINISH FINISH FINISH!!!! (see Ed ab my formatting question)


## Problem 1.5
```julia
using JuMP
using Cbc

waste=Model(Cbc.Optimizer)
I=1:2 # number of cities
J=1:3 # number of disposal sites
@variable(waste, W[i in I, j in J]>=0) # waste transported from city i to disposal j (Mg/day)
@variable(waste, R[1, k in J]>=0) # residual waste transported from disposal k to disposal j (Mg/day)
@variable(waste, Y[1, j in J], Bin)
@objective(waste, Min, sum(c.*Y)+sum([b; b].*W)+sum([50 60 50].*R)+sum(a.*l.*W)+sum(a.*lR.*R)+sum(RecycFrac*RecyC.*W))
# mass balance
@constraint(waste, city[i in I], sum(W[i,:])==S[i])
@constraint(waste, LF, W[1,1]+W[2,1]+R[1,1]+R[1,3]<=K[1])
@constraint(waste, MRF, W[1,2]+W[2,2]<=K[2])
@constraint(waste, WTE, W[1,3]+W[2,3]+R[1,2]<=K[3])
# residuals
@constraint(waste, residAsh, R[1,3]==AshFrac.*(W[1,3]+W[2,3]+R[1,2]))
@constraint(waste, residRecyc, R[1,2]+R[1,1]==(1-RecycFrac)*(W[1,2]+W[2,2]))
# commitment
@constraint(waste, commit1, Y[1,1]==1)
@constraint(waste, commit2, !Y[1,2]=>{W[1,2]+W[2,2]==0})
@constraint(waste, commit3, !Y[1,3]=>{W[1,3]+W[2,3]+R[1,2]==0})
set_silent(waste)
optimize!(waste);
Cq1= objective_value(waste);
Yq1= value.(Y).data;
Wq1= value.(W).data;
Rq1= value.(R).data;
```

## Problem 1.6
The optimal solution has a total cost of $$`j round(Cq1, digits=2)`

For values of $Y_j$:   
$Y_1$= `j Yq1[1,1]`, 
$Y_2$= `j Yq1[1,2]`, 
$Y_3$= `j Yq1[1,3]`.

For vaues of $W_{i,j}$ in (Mg/day): 
$W_{1,1}$= `j round(Wq1[1,1]; digits=2)`, 
$W_{1,2}$= `j round(Wq1[1,2]; digits=2)`, 
$W_{1,3}$= `j round(Wq1[1,3]; digits=2)`, 
$W_{2,1}$= `j round(Wq1[2,1]; digits=2)`, 
$W_{2,2}$= `j round(Wq1[2,2]; digits=2)`, 
$W_{2,3}$= `j round(Wq1[2,3]; digits=2)`. 

For vaues of $R_{k,j}$ in (Mg/day): 
$R_{2,1}$= `j round(Rq1[1,1]; digits=2)`, 
$R_{2,3}$= `j round(Rq1[1,2]; digits=2)`, 
$R_{3,1}$= `j round(Rq1[1,3]; digits=2)`.

# Problem 2

## Problem 2.1
For this problem, a carbon tax will be added, increasing the cost of transportation and disposal by incineration (WTE). 
Specifically, the tipping fee for WTE will increase to $75/Mg and the transportation costs will increase to $2/Mg-km.

No new constraints will need to be changed, but non-decision variables will be. For example, 
$a$ will change from $1.5$ to $2$, and $b$ will change to $[50, 7, 75]$ and the tipping fee Matrix 
for the residuals ($R$) will change from $[50, 60, 50]$ to $[50, 75, 50]$.

## Problem 2.2

```julia
a= 2; # $/Mg-km, transportation fee
b= [50 7 75]; # $/Mg, tipping fee
waste2=Model(Cbc.Optimizer)
I=1:2 # number of cities
J=1:3 # number of disposal sites
@variable(waste2, W[i in I, j in J]>=0) # waste transported from city i to disposal j (Mg/day)
@variable(waste2, R[1, k in J]>=0) # residual waste transported from disposal k to disposal j (Mg/day)
@variable(waste2, Y[1, j in J], Bin)
@objective(waste2, Min, sum(c.*Y)+sum([b; b].*W)+sum([50 75 50].*R)+sum(a.*l.*W)+sum(a.*lR.*R)+sum(RecycFrac*RecyC.*W))
# mass balance
@constraint(waste2, city[i in I], sum(W[i,:])==S[i])
@constraint(waste2, LF, W[1,1]+W[2,1]+R[1,1]+R[1,3]<=K[1])
@constraint(waste2, MRF, W[1,2]+W[2,2]<=K[2])
@constraint(waste2, WTE, W[1,3]+W[2,3]+R[1,2]<=K[3])
# residuals
@constraint(waste2, residAsh, R[1,3]==AshFrac.*(W[1,3]+W[2,3]+R[1,2]))
@constraint(waste2, residRecyc, R[1,2]+R[1,1]==(1-RecycFrac)*(W[1,2]+W[2,2]))
# commitment
@constraint(waste2, commit1, Y[1,1]==1)
@constraint(waste2, commit2, !Y[1,2]=>{W[1,2]+W[2,2]==0})
@constraint(waste2, commit3, !Y[1,3]=>{W[1,3]+W[2,3]+R[1,2]==0})
set_silent(waste2)
optimize!(waste2);
Cq2= objective_value(waste2);
Yq2= value.(Y).data;
Wq2= value.(W).data;
Rq2= value.(R).data;
```

## Problem 2.3
The optimal solution has a total cost of $$`j round(Cq2, digits=2)`

For values of $Y_j$:   
$Y_1$= `j Yq2[1,1]`, 
$Y_2$= `j Yq2[1,2]`, 
$Y_3$= `j Yq2[1,3]`.

For vaues of $W_{i,j}$ in (Mg/day): 
$W_{1,1}$= `j round(Wq2[1,1]; digits=2)`, 
$W_{1,2}$= `j round(Wq2[1,2]; digits=2)`, 
$W_{1,3}$= `j round(Wq2[1,3]; digits=2)`, 
$W_{2,1}$= `j round(Wq2[2,1]; digits=2)`, 
$W_{2,2}$= `j round(Wq2[2,2]; digits=2)`, 
$W_{2,3}$= `j round(Wq2[2,3]; digits=2)`.

For vaues of $R_{k,j}$ in (Mg/day): 
$R_{2,1}$= `j round(Rq2[1,1]; digits=2)`, 
$R_{2,3}$= `j round(Rq2[1,2]; digits=2)`, 
$R_{3,1}$= `j round(Rq2[1,3]; digits=2)`.

TALK ABOUT DIFFERENCES (DOUBLE CHECK CONSTRAINTS AND STUFF)
# References
https://docs.julialang.org/en/v1/stdlib/Markdown/
